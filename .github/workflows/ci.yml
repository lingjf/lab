name: ci

on: [push]

jobs:

  msvc_vtable_layout:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: run
      run: |
        cd vtable_layout
        C:/Program` Files` `(x86`)/Microsoft` Visual` Studio/2019/Enterprise/VC/Tools/MSVC/14.29.30037/bin/Hostx64/x64/cl.exe /d1 reportAllClassLayout a.cpp
  
  gcc_vtable_layout:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: run
      run: |
        cd vtable_layout
        # g++ -std=c++11 -fdump-class-hierarchy a.cpp
        g++ -std=c++11 -fdump-lang-class a.cpp
        cat a.cpp.*.class

  msvc_dynamic_library:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: configure
      run: cd dynamic_library && cmake .
    - name: build
      run: cd dynamic_library && cmake --build .
    - name: run
      run: cd dynamic_library && ./a.out.exe

  msvc_vtable_hook:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: configure
      run: cd vtable_hook && cmake .
    - name: build
      run: cd vtable_hook && cmake --build .
    - name: run
      run: cd vtable_hook && ./a.out.exe

  msvc_mm:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: configure
      run: cd mm && cmake .
    - name: build
      run: cd mm && cmake --build .
    - name: run
      run: cd mm && ./Debug/a.out.exe

  msvc_nm:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: configure
      run: cd nm && cmake .
    - name: build
      run: cd nm && cmake --build .
    - name: run
      run: cd nm && ./Debug/a.out.exe ./Debug/a.out.exe

  gcc_dynamic_library:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: configure
      run: cd dynamic_library && cmake .
    - name: build
      run: cd dynamic_library && cmake --build .
    - name: run
      run: cd dynamic_library && ./a.out

  build:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - { sys: mingw32, env: i686 }
          - { sys: mingw64, env: x86_64 }
          - { sys: ucrt64,  env: ucrt-x86_64 }  # Experimental!
          - { sys: clang64, env: clang-x86_64 } # Experimental!
    name: ðŸš§ ${{matrix.sys}}
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: actions/checkout@v2
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.sys}}
        update: true
        install: >-
          git
          make
          mingw-w64-${{matrix.env}}-toolchain
          mingw-w64-${{matrix.env}}-cmake
          mingw-w64-${{matrix.env}}-ninja
    - name: check platform
      run: uname -a
    - name: pre-defined preprocessor macros
      run: gcc -dM -E - < /dev/null
    - name: sysroot directory for headers and libraries
      run: g++ -E -v - < /dev/null
    - name: configure
      run: cd dynamic_library && cmake .
    - name: build
      run: cd dynamic_library && cmake --build .
    - name: run
      run: cd dynamic_library && ./a.out

  hello: 
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: mingw64
        update: true
        install: >-
          git
          make
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-ninja
    - uses: actions/checkout@v2
    - name: check platform
      run: uname -a
    - name: pre-defined preprocessor macros
      run: gcc -dM -E - < /dev/null
    - name: sysroot directory for headers and libraries
      run: g++ -E -v - < /dev/null
    - name: configure
      run: cd dynamic_library && cmake .
    - name: build
      run: cd dynamic_library && cmake --build .
    - name: run
      run: cd dynamic_library && ./a.out
